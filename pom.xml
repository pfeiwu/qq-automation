<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pfeiwu</groupId>
    <artifactId>qq-automation</artifactId>
    <version>0.1</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <jna.version>5.14.0</jna.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>${jna.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.mmarquee</groupId>
            <artifactId>ui-automation</artifactId>
            <version>0.7.0</version>
            <exclusions>
                <exclusion>
                    <groupId>net.java.dev.jna</groupId>
                    <artifactId>jna-platform</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.java.dev.jna</groupId>
                    <artifactId>jna</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>

            <!-- Shade Plugin for creating Uber-JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.pfeiwu.qqautomation.Main</mainClass> <!-- 请替换为你的主类 -->
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!--            &lt;!&ndash; ProGuard Plugin for optimizing the JAR &ndash;&gt;-->
<!--            <plugin>-->
<!--            <groupId>com.github.wvengen</groupId>-->
<!--            <artifactId>proguard-maven-plugin</artifactId>-->
<!--            <version>2.6.1</version>-->
<!--            <executions>-->
<!--                <execution>-->
<!--                    <phase>package</phase>-->
<!--                    <goals>-->
<!--                        <goal>proguard</goal>-->
<!--                    </goals>-->
<!--                </execution>-->
<!--            </executions>-->
<!--            <configuration>-->
<!--                &lt;!&ndash; 是否将生成的PG文件安装部署&ndash;&gt;-->
<!--                <attach>true</attach>-->
<!--                &lt;!&ndash; 是否混淆&ndash;&gt;-->
<!--                <obfuscate>true</obfuscate>-->
<!--                &lt;!&ndash; 指定生成文件分类 &ndash;&gt;-->
<!--                <attachArtifactClassifier>pg</attachArtifactClassifier>-->
<!--                <options>-->
<!--                    &lt;!&ndash; JDK目标版本17&ndash;&gt;-->
<!--                    <option>-target 17</option>-->
<!--                    &lt;!&ndash; 不做收缩（删除注释、未被引用代码）&ndash;&gt;-->
<!--                    &lt;!&ndash; proguard会对代码进行优化压缩，他会删除从未使用的类或者类成员变量等，shrink这个功能一般最好别用，所以这里添加了<option>-dontshrink</option>，我就遇到过启动jar的时候不支持压缩jar的问题&ndash;&gt;-->
<!--&lt;!&ndash;                    <option>-shrink</option>&ndash;&gt;-->
<!--                    &lt;!&ndash; 不做优化（变更代码实现逻辑）&ndash;&gt;-->
<!--                    <option>-dontoptimize</option>-->
<!--                    &lt;!&ndash; 不路过非公用类文件及成员&ndash;&gt;-->
<!--                    <option>-dontskipnonpubliclibraryclasses</option>-->
<!--                    <option>-dontskipnonpubliclibraryclassmembers</option>-->
<!--                    &lt;!&ndash;不用大小写混合类名机制&ndash;&gt;-->
<!--                    <option>-dontusemixedcaseclassnames</option>-->

<!--                    &lt;!&ndash; 优化时允许访问并修改有修饰符的类和类的成员 &ndash;&gt;-->
<!--                    <option>-allowaccessmodification</option>-->
<!--                    &lt;!&ndash; 确定统一的混淆类的成员名称来增加混淆&ndash;&gt;-->
<!--                    <option>-useuniqueclassmembernames</option>-->
<!--                    &lt;!&ndash; 不混淆所有包名&ndash;&gt;-->
<!--                    <option>-keeppackagenames</option>-->
<!--                    <option>-keepdirectories</option>-->
<!--                    &lt;!&ndash; 保留枚举成员及方法&ndash;&gt;-->
<!--                    <option>-keepclassmembers enum * { *; }</option>-->
<!--                    &lt;!&ndash; 不混淆当前包中的public方法、变量等等 &ndash;&gt;-->
<!--                    <option>-keep class com.pfeiwu.qqautomation.** {-->
<!--                        public *; }</option>-->
<!--                </options>-->

<!--                <outjar>${project.build.finalName}-after-pg.jar</outjar>-->
<!--                <libs>-->
<!--                    <lib>${java.home}/jmods/java.base.jmod</lib>-->
<!--                </libs>-->
<!--                <injar>classes</injar>-->
<!--                &lt;!&ndash; 输出目录&ndash;&gt;-->
<!--                <outputDirectory>${project.build.directory}</outputDirectory>-->
<!--            </configuration>-->
<!--        </plugin>-->
        </plugins>
    </build>
</project>